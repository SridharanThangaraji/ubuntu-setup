
# font_features

#: E.g. font_features none

#: Choose exactly which OpenType features to enable or disable. Note
#: that for the main fonts, features can be specified when selecting
#: the font using the choose-fonts kitten. This setting is useful for
#: fallback fonts.

#: Some fonts might have features worthwhile in a terminal. For
#: example, Fira Code includes a discretionary feature, zero, which in
#: that font changes the appearance of the zero (0), to make it more
#: easily distinguishable from Ã˜. Fira Code also includes other
#: discretionary features known as Stylistic Sets which have the tags
#: ss01 through ss20.

#: For the exact syntax to use for individual features, see the
#: HarfBuzz documentation <https://harfbuzz.github.io/harfbuzz-hb-
#: common.html#hb-feature-from-string>.

#: Note that this code is indexed by PostScript name, and not the font
#: family. This allows you to define very precise feature settings;
#: e.g. you can disable a feature in the italic font but not in the
#: regular font.

#: On Linux, font features are first read from the FontConfig database
#: and then this option is applied, so they can be configured in a
#: single, central place.

#: To get the PostScript name for a font, use the `fc-scan file.ttf`
#: command on Linux or the `Font Book tool on macOS
#: <https://apple.stackexchange.com/questions/79875/how-can-i-get-the-
#: postscript-name-of-a-ttf-font-installed-in-os-x>`__.

#: Enable alternate zero and oldstyle numerals::

#:     font_features FiraCode-Retina +zero +onum

#: Enable only alternate zero in the bold font::

#:     font_features FiraCode-Bold +zero

#: Disable the normal ligatures, but keep the calt feature which (in
#: this font) breaks up monotony::

#:     font_features TT2020StyleB-Regular -liga +calt

#: In conjunction with force_ltr, you may want to disable Arabic
#: shaping entirely, and only look at their isolated forms if they
#: show up in a document. You can do this with e.g.::

#:     font_features UnifontMedium +isol -medi -fina -init

