# modify_font

#: Modify font characteristics such as the position or thickness of
#: the underline and strikethrough. The modifications can have the
#: suffix px for pixels or % for percentage of original value. No
#: suffix means use pts. For example::

#:     modify_font underline_position -2
#:     modify_font underline_thickness 150%
#:     modify_font strikethrough_position 2px

#: Additionally, you can modify the size of the cell in which each
#: font glyph is rendered and the baseline at which the glyph is
#: placed in the cell. For example::

#:     modify_font cell_width 80%
#:     modify_font cell_height -2px
#:     modify_font baseline 3

#: Note that modifying the baseline will automatically adjust the
#: underline and strikethrough positions by the same amount.
#: Increasing the baseline raises glyphs inside the cell and
#: decreasing it lowers them. Decreasing the cell size might cause
#: rendering artifacts, so use with care.

# box_drawing_scale 0.001, 1, 1.5, 2

#: The sizes of the lines used for the box drawing Unicode characters.
#: These values are in pts. They will be scaled by the monitor DPI to
#: arrive at a pixel value. There must be four values corresponding to
#: thin, normal, thick, and very thick lines.

# undercurl_style thin-sparse

#: The style with which undercurls are rendered. This option takes the
#: form (thin|thick)-(sparse|dense). Thin and thick control the
#: thickness of the undercurl. Sparse and dense control how often the
#: curl oscillates. With sparse the curl will peak once per character,
#: with dense twice. Changing this option dynamically via reloading
#: the config or remote control is undefined.

# underline_exclusion 1

#: By default kitty renders gaps in underlines when they overlap with
#: descenders (the parts of letters below the baseline, such as for y,
#: q, p etc.). This option controls the thickness of the gaps. It can
#: be either a unitless number in which case it is a fraction of the
#: underline thickness as specified in the font or it can have a
#: suffix of px for pixels or pt for points. Set to zero to disable
#: the gaps. Changing this option dynamically via reloading the config
#: or remote control is undefined.

# text_composition_strategy platform

#: Control how kitty composites text glyphs onto the background color.
#: The default value of platform tries for text rendering as close to
#: "native" for the platform kitty is running on as possible.

#: A value of legacy uses the old (pre kitty 0.28) strategy for how
#: glyphs are composited. This will make dark text on light
#: backgrounds look thicker and light text on dark backgrounds
#: thinner. It might also make some text appear like the strokes are
#: uneven.

#: You can fine tune the actual contrast curve used for glyph
#: composition by specifying up to two space-separated numbers for
#: this setting.

#: The first number is the gamma adjustment, which controls the
#: thickness of dark text on light backgrounds. Increasing the value
#: will make text appear thicker. The default value for this is 1.0 on
#: Linux and 1.7 on macOS. Valid values are 0.01 and above. The result
#: is scaled based on the luminance difference between the background
#: and the foreground. Dark text on light backgrounds receives the
#: full impact of the curve while light text on dark backgrounds is
#: affected very little.

#: The second number is an additional multiplicative contrast. It is
#: percentage ranging from 0 to 100. The default value is 0 on Linux
#: and 30 on macOS.

#: If you wish to achieve similar looking thickness in light and dark
#: themes, a good way to experiment is start by setting the value to
#: 1.0 0 and use a dark theme. Then adjust the second parameter until
#: it looks good. Then switch to a light theme and adjust the first
#: parameter until the perceived thickness matches the dark theme.

# text_fg_override_threshold 0

#: A setting to prevent low contrast between foreground and background
#: colors. Useful when working with applications that use colors that
#: do not contrast well with your preferred color scheme. The default
#: value is 0, which means no color overriding is performed. There are
#: two modes of operation:

#: A value with the suffix  ratio represents the minimum accepted
#: contrast ratio between the foreground and background color.
#: Possible values range from 0.0 ratio to 21.0 ratio. For example, to
#: meet WCAG level AA
#: <https://en.wikipedia.org/wiki/Web_Content_Accessibility_Guidelines>
#: a value of 4.5 ratio can be provided. The algorithm is implemented
#: using HSLuv <https://www.hsluv.org/> which enables it to change the
#: perceived lightness of a color just as much as needed without
#: really changing its hue and saturation.

#: A value with the suffix  % represents the minimum accepted
#: difference in luminance between the foreground and background
#: color, below which kitty will override the foreground color. It is
#: percentage ranging from 0 % to 100 %. If the difference in
#: luminance of the foreground and background is below this threshold,
#: the foreground color will be set to white if the background is dark
#: or black if the background is light.

#: WARNING: Some programs use characters (such as block characters)
#: for graphics display and may expect to be able to set the
#: foreground and background to the same color (or similar colors). If
#: you see unexpected stripes, dots, lines, incorrect color, no color
#: where you expect color, or any kind of graphic display problem try
#: setting text_fg_override_threshold to 0 to see if this is the cause
#: of the problem or consider using the ratio mode of operation
#: described above instead of the % mode of operation.

